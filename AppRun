#!/usr/bin/env python

import findrox

from gtk import *
import GDK
from TimeDisplay import *
from memos import *

from rox.Menu import Menu

menu = Menu('Memo', 'main', [
                ('/Add Memo',    'new_memo',    ''),
                ('/Help',        'help',	''),
                ('/Quit',        'destroy',     ''),
                ])

class Window(GtkWindow):
	def __init__(self):
		GtkWindow.__init__(self)
		self.set_wmclass("Memo", "Memo")
		self.set_title("Memo")
		self.set_default_size(200, 100)

		vbox = GtkVBox(homogeneous = FALSE, spacing = 0)
		self.add(vbox)

		time_button = GtkButton()
		time_button.add(TimeDisplay())
		time_button.unset_flags(CAN_FOCUS)
		vbox.pack_start(time_button, expand = FALSE)
		vbox.pack_start(memo_list, expand = TRUE)
		memo_list.unset_flags(CAN_FOCUS)

		self.add_events(GDK.BUTTON_PRESS_MASK)
		self.connect("button-press-event", self.button_press)
		time_button.connect("button-press-event", self.button_press)
		time_button.connect("clicked", lambda w: new_memo())

		menu.attach(self, self)
	
	def new_memo(self):
		new_memo()
	
	def help(self):
		from rox import filer, support
		filer.open_dir(support.app_dir + '/Help')

	def button_press(self, widget, event):
		if event.type != GDK.BUTTON_PRESS:
			return
		elif event.button == 2 or event.button == 3:
			menu.popup(self, event)
		return 1

window = Window()

window.show_all()
window.connect("destroy", mainquit)

mainloop()
